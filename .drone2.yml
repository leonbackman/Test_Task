kind: pipeline
name: deploy
platform:
  os: linux
  arch: amd64

steps:
  - name: deploy
    pull: always
    image: docker.twistbioscience-staging.com/java_salesforce:latest
    environment:
      GIT_TOKEN:
        from_secret: git_token
      SF_DEPLOYMENT_PASSWORD:
        from_secret: sf_deployment_password
      SF_DEPLOYMENT_TOKEN_PROD:
        from_secret: sf_deployment_token_prod
      SF_DEPLOYMENT_TOKEN_QA:
        from_secret: sf_deployment_token_qa
      SF_DEPLOYMENT_TOKEN_STAGING:
        from_secret: sf_deployment_token_staging
      SF_PASSWORD:
        from_secret: sf_password
      SF_TOKEN_PROD:
        from_secret: sf_token_prod
    commands:
      - ./deploy.sh
    settings:
      group: sfdc_builds
    when:
      event:
        - push
    depends_on: [ clone ]

  - name: slack
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: sfdc_deployments
      icon_url: http://discourse.drone.io/uploads/drone/original/1X/9dd937ba6f92071cbc3db623bd001298474084ee.png
      template: |
        {{#success build.status}}
          :sunny: SUCCESS: {{repo.owner}}/{{repo.name}}/{{build.branch}} [#{{build.number}}]
          ({{build.link}})
        {{else}}
          :thunder_cloud_and_rain: FAILED: {{repo.owner}}/{{repo.name}}/{{build.branch}} [#{{build.number}}]
          ({{build.link}})
        {{/success}}
      username: Drone
      webhook: https://hooks.slack.com/services/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
    when:
      event:
        - push
      status:
        - success
        - failure
    depends_on: [ deploy ]

  - name: email
    pull: if-not-exists
    image: drillster/drone-email
    settings:
      from: drone@twistbioscience-staging.com
      host: smtp.sendgrid.net
    environment:
      EMAIL_PASSWORD:
        from_secret: email_password
      EMAIL_USERNAME:
        from_secret: email_username
    when:
      event:
        - push
      status:
        - failure
    depends_on: [ deploy ]

image_pull_secrets:
  - .dockerconfigjson

---

kind: pipeline
name: validate
platform:
  os: linux
  arch: amd64

steps:
  - name: validate_dev
    pull: always
    image: docker.twistbioscience-staging.com/java_salesforce:latest
    environment:
      SF_ENV: dev
      GIT_TOKEN:
        from_secret: git_token
      SF_DEPLOYMENT_PASSWORD:
        from_secret: sf_deployment_password
      SF_DEPLOYMENT_TOKEN_PROD:
        from_secret: sf_deployment_token_prod
      SF_DEPLOYMENT_TOKEN_QA:
        from_secret: sf_deployment_token_qa
      SF_DEPLOYMENT_TOKEN_STAGING:
        from_secret: sf_deployment_token_staging
      SF_PASSWORD:
        from_secret: sf_password
      SF_TOKEN_PROD:
        from_secret: sf_token_prod
    commands:
      - ./validate.sh
    settings:
      group: sfdc_builds
    when:
      event:
        - push
    depends_on: [ clone ]

  - name: validate_qa
    pull: always
    image: docker.twistbioscience-staging.com/java_salesforce:latest
    environment:
      SF_ENV: qa
      GIT_TOKEN:
        from_secret: git_token
      SF_DEPLOYMENT_PASSWORD:
        from_secret: sf_deployment_password
      SF_DEPLOYMENT_TOKEN_PROD:
        from_secret: sf_deployment_token_prod
      SF_DEPLOYMENT_TOKEN_QA:
        from_secret: sf_deployment_token_qa
      SF_DEPLOYMENT_TOKEN_STAGING:
        from_secret: sf_deployment_token_staging
      SF_PASSWORD:
        from_secret: sf_password
      SF_TOKEN_PROD:
        from_secret: sf_token_prod
    commands:
      - ./validate.sh
    settings:
      group: sfdc_builds
    when:
      event:
        - push
    depends_on: [ clone ]

  - name: validate_pdxqa
    pull: always
    image: docker.twistbioscience-staging.com/java_salesforce:latest
    environment:
      SF_ENV: pdxuata
      GIT_TOKEN:
        from_secret: git_token
      SF_DEPLOYMENT_PASSWORD:
        from_secret: sf_deployment_password
      SF_DEPLOYMENT_TOKEN_PROD:
        from_secret: sf_deployment_token_prod
    commands:
      - ./validate.sh
    settings:
      group: sfdc_builds
    when:
      event:
        - push
    depends_on: [ clone ]

  - name: validate_pdx
    pull: always
    image: docker.twistbioscience-staging.com/java_salesforce:latest
    environment:
      SF_ENV: pdxuatb
      GIT_TOKEN:
        from_secret: git_token
      SF_DEPLOYMENT_PASSWORD:
        from_secret: sf_deployment_password
      SF_DEPLOYMENT_TOKEN_PROD:
        from_secret: sf_deployment_token_prod
    commands:
      - ./validate.sh
    settings:
      group: sfdc_builds
    when:
      event:
        - push
    depends_on: [ clone ]

  - name: validate_staging
    pull: always
    image: docker.twistbioscience-staging.com/java_salesforce:latest
    environment:
      SF_ENV: staging
      GIT_TOKEN:
        from_secret: git_token
      SF_DEPLOYMENT_PASSWORD:
        from_secret: sf_deployment_password
      SF_DEPLOYMENT_TOKEN_PROD:
        from_secret: sf_deployment_token_prod
      SF_DEPLOYMENT_TOKEN_QA:
        from_secret: sf_deployment_token_qa
      SF_DEPLOYMENT_TOKEN_STAGING:
        from_secret: sf_deployment_token_staging
      SF_PASSWORD:
        from_secret: sf_password
      SF_TOKEN_PROD:
        from_secret: sf_token_prod
    commands:
      - ./validate.sh
    settings:
      group: sfdc_builds
    when:
      event:
        - push
    depends_on: [ clone ]

  - name: validate_prod
    pull: always
    image: docker.twistbioscience-staging.com/java_salesforce:latest
    environment:
      SF_ENV: prod
      GIT_TOKEN:
        from_secret: git_token
      SF_DEPLOYMENT_PASSWORD:
        from_secret: sf_deployment_password
      SF_DEPLOYMENT_TOKEN_PROD:
        from_secret: sf_deployment_token_prod
      SF_DEPLOYMENT_TOKEN_QA:
        from_secret: sf_deployment_token_qa
      SF_DEPLOYMENT_TOKEN_STAGING:
        from_secret: sf_deployment_token_staging
      SF_PASSWORD:
        from_secret: sf_password
      SF_TOKEN_PROD:
        from_secret: sf_token_prod
    commands:
      - ./validate.sh
    settings:
      group: sfdc_builds
    when:
      event:
        - push
    depends_on: [ clone ]

image_pull_secrets:
  - .dockerconfigjson
